@page "/chat"
@using System.Data
@rendermode InteractiveServer


<PageTitle>Chat</PageTitle>

<h3>Chat</h3>


<div class="chat-messages">
    @foreach (var inputmessage in mychat.Messages)
    {
        <div class="chat-message">
            <span class="message-date">@inputmessage.Date:</span>
            <span class="message-sender">@inputmessage.Sender.Name</span>
            @inputmessage.TextMessage
        </div>
    }
</div>

@if (!isUserNameSet)
{
    <div>
        <input type="text" placeholder="Enter your username" @bind="newUserName" />
        <button @onclick="SetUserName">Set Username</button>
    </div>
}
else
{
    <div>
        <input type="text" placeholder="Enter your username" @bind="newUserName" />
        <button @onclick="SetUserName">Set Username</button>
    </div>
}


<input type="text" placeholder="Write your message" @bind="newInputMessage" />
<button @onclick="AddInputMessage">Send message</button>

@code {
    public string? newUserName;
    public string? newInputMessage;
    public bool isUserNameSet = false;
    public User? currentUser;
    public Chat mychat;
    public int mychatId = 1;

    // Populates the chat window with data from the database.
    protected override void OnInitialized()
    {
        mychat = new Chat();
        LoadData(mychatId);
    }

    // Loads data from the database. 
    public void LoadData(long chatId)
    {
        DataBase db = new DataBase();
        System.Data.DataTable dt = db.Fetchmessages(chatId);

        foreach (DataRow row in dt.Rows)
        {
            string TextMessage = row["message"].ToString();
            long ChatID = Convert.ToInt64(row["chat_id"]);
            DateTime Date = (DateTime)row["message_sent"];
            string ChatName = row["chatname"].ToString();
            string username = row["username"].ToString();
            long userid = Convert.ToInt64(row["user_id"]);
            if (string.IsNullOrWhiteSpace("username"))
            {
                Console.WriteLine("username is null or whitespace");
            }

            User user = new User(row["username"].ToString(), Convert.ToInt64(row["user_id"]));
            User Sender = user;

            Message messageFromRow = new Message(Sender, TextMessage, ChatName, ChatID, Date);

            mychat.Messages.Add(messageFromRow);
            mychat.Users.Add(user);
        }    
    }

    // Sets the users username when button is used.
    public void SetUserName()
    {
        if (!string.IsNullOrWhiteSpace(newUserName))
        {
            DataBase db = new DataBase();

            long userId = db.GetUserId(newUserName);

            currentUser = new User(newUserName, userId);
            isUserNameSet = true;

            newUserName = string.Empty;
        }
    }

    // Saves the users input message to the database and the chat window when the button is used.
    public void AddInputMessage()
    {
        if (currentUser != null && !string.IsNullOrWhiteSpace(newInputMessage))
        {
            DataBase db = new DataBase();
            long mychatId = db.GetChatId("mychat");
            long userId = db.GetUserId(currentUser.Name);

            mychat.CreateMessage(currentUser, newInputMessage, "mychat", mychatId, DateTime.Now);

            string generatedSqlString = db.GenerateSqlString("mychat", currentUser.Name, "messageText");
            db.InsertChatMessage(generatedSqlString, userId, newInputMessage, mychatId);

            newInputMessage = string.Empty;
        }
    }
}
